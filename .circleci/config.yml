version: 2.1 # use CircleCI 2.1

orbs:
  ruby: circleci/ruby@2.0.0
  browser-tools: circleci/browser-tools@1.4.1

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    parallelism: 1 # run three instances of this job in parallel
    docker: # run the steps with Docker
    # Find your ruby image: https://hub.docker.com/r/circleci/ruby/tags
      - image: cimg/ruby:3.1.2-browsers
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
          NODE_ENV: test
      - image: cimg/postgres:15.1 # database image
        environment: # environment variables for database
          POSTGRES_USER: postgres
          POSTGRES_DB: effective_boilerplate
          POSTGRES_PASSWORD: ""
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - restore_cache:
          keys:
            - effective_boilerplate-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install Bundle
          command: |
            bundle install

      - save_cache:
          key: effective_boilerplate-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      - run:
          name: Unit Tests
          command: bundle exec rails test
